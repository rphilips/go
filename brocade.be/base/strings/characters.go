package strings

import (
	"fmt"
	"regexp"
)

// Functions
var Chars = map[string]rune{
	"EU":   8364,
	"oo":   8734,
	"eu":   8364,
	"oe":   339,
	"OE":   338,
	"!!":   161,
	"c|":   162,
	"BP":   163,
	"bp":   163,
	"$S":   164,
	"$s":   164,
	"YS":   165,
	"ys":   165,
	"||":   166,
	"SS":   167,
	"ss":   167,
	"CS":   169,
	"cs":   169,
	"<<":   171,
	"--":   173,
	"ts":   174,
	"TS":   174,
	" 0":   176,
	" o":   176,
	"+-":   177,
	"22":   178,
	"33":   179,
	"PP":   182,
	"pp":   182,
	"11":   185,
	">>":   187,
	"14":   188,
	"12":   189,
	"34":   190,
	"??":   191,
	"A`":   192,
	`A"`:   193,
	"A^":   194,
	"A~":   195,
	`A'`:   196,
	"A:":   196,
	"A0":   197,
	"Ao":   197,
	"AE":   198,
	"Cc":   199,
	"E`":   200,
	`E"`:   201,
	"E^":   202,
	`E'`:   203,
	"E:":   203,
	"I`":   204,
	`I"`:   205,
	"I^":   206,
	`I'`:   207,
	"I:":   207,
	"D-":   208,
	"N~":   209,
	"O`":   210,
	`O"`:   211,
	"O^":   212,
	"O~":   213,
	`O'`:   214,
	"O:":   214,
	"xx":   215,
	"XX":   215,
	"O/":   216,
	"O\\":  216,
	"U`":   217,
	`U"`:   218,
	"U^":   219,
	`U'`:   220,
	"U:":   220,
	`Y"`:   221,
	"TT":   222,
	"sz":   223,
	"a`":   224,
	`a"`:   225,
	"a^":   226,
	"a~":   227,
	`a'`:   228,
	"a:":   228,
	"ao":   229,
	"a0":   229,
	"ae":   230,
	"cc":   231,
	"e`":   232,
	`e'`:   233,
	"e^":   234,
	`e"`:   235,
	"e:":   235,
	"i`":   236,
	`i'`:   237,
	"i^":   238,
	`i"`:   239,
	"i:":   239,
	"d-":   240,
	"n~":   241,
	"o`":   242,
	`o'`:   243,
	"o^":   244,
	"o~":   245,
	`o"`:   246,
	"o:":   246,
	"//":   247,
	"\\\\": 247,
	"o/":   248,
	"o\\":  248,
	"u`":   249,
	"u'":   250,
	"u^":   251,
	`u"`:   252,
	"u:":   252,
	`'`:    253,
	"tt":   254,
	`y"`:   255,
	"y:":   255,
	`->`:   8594,
	`<-`:   8592,
	`=/`:   8800,
	"<=":   8804,
	"=<":   8804,
	">=":   8805,
	"=>":   8805,
	"A*":   913,
	"a*":   945,
	"B*":   914,
	"b*":   946,
	"C*":   915,
	"c*":   947,
	"G*":   915,
	"g*":   947,
	"D*":   916,
	"d*":   948,
	"E*":   917,
	"e*":   949,
	"Z*":   918,
	"z*":   950,
	"H*":   919,
	"h*":   951,
	"I*":   921,
	"i*":   953,
	"K*":   922,
	"k*":   954,
	"L*":   923,
	"l*":   955,
	"M*":   924,
	"m*":   956,
	"N*":   925,
	"n*":   957,
	"Χ*":   926,
	"χ*":   958,
	"Ω*":   927,
	"ω*":   959,
	"P*":   928,
	"R*":   929,
	"r*":   961,
	"S*":   931,
	"s*":   963,
	"Σ*":   962,
	"σ*":   962,
	"T*":   932,
	"t*":   964,
	"Y*":   933,
	"y*":   965,
	"F*":   934,
	"f*":   966,
	"X*":   935,
	"x*":   967,
	"?P":   936,
	"p*":   968,
	"O*":   937,
	"o*":   969,
	"**":   9733,
	"__":   8210,
	"..":   8230,
	"[[":   10214,
	"]]":   10215,
	"cr":   169,
}

var char = regexp.MustCompile(`{..}`)

func InsertDiacritic(s string) string {

	fn := func(str string) string {
		ustr := str[1 : len(str)-1]
		r, ok := Chars[ustr]
		if ok {
			fmt.Println(r)
			return string(r)
		}
		r, ok = Chars[string([]byte{ustr[1], ustr[0]})]
		if ok {
			return string(r)
		}
		return str
	}
	return char.ReplaceAllStringFunc(s, fn)
}
